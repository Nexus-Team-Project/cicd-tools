# cicd-tools/.github/workflows/build-orchestrator.yml
name: Reusable Build Stage Orchestrator

on:
  workflow_call:
    inputs:
      target_environment:
        required: true
        type: string
        description: 'The target environment for build-specific tagging (e.g., dev, production)'
      repo_name:
        required: true
        type: string
        description: 'Name of the microservice repository (used for image name)'
      sha:
        required: true
        type: string
        description: 'Commit SHA (used for image tagging)'
    outputs:
      full_image_tag:
        description: 'The full image tag generated (registry/image:tag)'
        value: ${{ jobs.build_stage.outputs.full_image_tag }}
      aks_namespace: # Output for dynamic AKS namespace
        description: 'The determined AKS namespace for deployment'
        value: ${{ jobs.build_stage.outputs.aks_namespace }}
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

jobs:
  build_stage:
    runs-on: ubuntu-latest
    outputs:
      full_image_tag: ${{ steps.set_image_info.outputs.full_image_tag }}
      aks_namespace: ${{ steps.set_image_info.outputs.aks_namespace }}

    steps:
      - name: Set Image Tag and AKS Namespace
        id: set_image_info
        run: |
          IMAGE_TAG=""
          AKS_NAMESPACE=""
          # Access AZURE_CONTAINER_REGISTRY and RESOURCE_GROUP directly via vars. (Organization Variables)
          ACR_REGISTRY="${{ vars.AZURE_CONTAINER_REGISTRY }}"
          ACR_RESOURCE_GROUP="${{ vars.RESOURCE_GROUP }}" # Common RG for ACR

          TARGET_ENV_NAME="${{ inputs.target_environment }}"

          if [[ "$TARGET_ENV_NAME" == "dev" ]]; then
            IMAGE_TAG="dev-${{ inputs.sha }}"
            AKS_NAMESPACE="dev-${{ inputs.repo_name }}"
          elif [[ "$TARGET_ENV_NAME" == "production" ]]; then
            IMAGE_TAG="prod-${{ inputs.sha }}"
            AKS_NAMESPACE="prod-${{ inputs.repo_name }}"
          else
            IMAGE_TAG="${{ inputs.sha }}"
            AKS_NAMESPACE="default"
          fi

          FULL_IMAGE_NAME="$ACR_REGISTRY.azurecr.io/${{ inputs.repo_name }}:$IMAGE_TAG"

          echo "full_image_tag=$FULL_IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "aks_namespace=$AKS_NAMESPACE" >> $GITHUB_OUTPUT


      - name: Checkout Microservice Code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.sha }}
          path: app

      - name: Call Reusable Build Docker Workflow
        uses: ./.github/workflows/build.docker.yml
        with:
          image_name: ${{ inputs.repo_name }}
          image_tag: ${{ steps.set_image_info.outputs.full_image_tag }}
          # Pass common variables as inputs
          acr_registry: ${{ vars.AZURE_CONTAINER_REGISTRY }}
          acr_resource_group: ${{ vars.RESOURCE_GROUP }}
        secrets:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}