# build-orchestrator.yml
name: Reusable Build Stage Orchestrator

on:
  workflow_call:
    inputs:
      target_environment:
        required: true
        type: string
      repo_name:
        required: true
        type: string
    outputs:
      full_image_tag:
        value: ${{ jobs.set_build_vars.outputs.full_image_tag }}
      aks_namespace:
        value: ${{ jobs.set_build_vars.outputs.aks_namespace }}
      image_tag:
        value: ${{ jobs.set_build_vars.outputs.image_tag }}
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

jobs:
  set_build_vars:
    runs-on: ubuntu-latest
    outputs:
      full_image_tag: ${{ steps.set_image_info.outputs.full_image_tag }}
      aks_namespace: ${{ steps.set_image_info.outputs.aks_namespace }}
      image_tag: ${{ steps.set_image_info.outputs.image_tag }}
    steps:
      - name: Set Image Tag and AKS Namespace
        id: set_image_info
        run: |
          IMAGE_TAG=""
          AKS_NAMESPACE=""
          ACR_REGISTRY="${{ vars.AZURE_CONTAINER_REGISTRY }}"
          TARGET_ENV_NAME="${{ inputs.target_environment }}"

          if [[ "$TARGET_ENV_NAME" == "dev" ]]; then
            IMAGE_TAG="dev"
            AKS_NAMESPACE="dev"
          elif [[ "$TARGET_ENV_NAME" == "production" ]]; then
            IMAGE_TAG="stable"
            AKS_NAMESPACE="production"
          fi

          FULL_IMAGE_NAME="$ACR_REGISTRY.azurecr.io/${{ inputs.repo_name }}:$IMAGE_TAG"

          echo "full_image_tag=$FULL_IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "aks_namespace=$AKS_NAMESPACE" >> $GITHUB_OUTPUT
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "$GITHUB_OUTPUT"

  build_docker:
    needs: set_build_vars
    uses: ./.github/workflows/build.docker.yml
    with:
      image_name: ${{ inputs.repo_name }}
      image_tag: ${{ needs.set_build_vars.outputs.image_tag }}
      acr_registry: ${{ vars.AZURE_CONTAINER_REGISTRY }}
      acr_resource_group: ${{ vars.RESOURCE_GROUP }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}