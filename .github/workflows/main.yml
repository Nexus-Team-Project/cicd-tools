# cicd-tools/.github/workflows/main.yml
name: Reusable Main CI/CD Pipeline

on:
  workflow_call:
    # This section (on: workflow_call) defines what secrets THIS reusable workflow (main.yml) needs as inputs from ITS CALLER (the microservice repo)
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      GITHUB_TOKEN: # GITHUB_TOKEN is received as an explicit secret here from the caller
        required: true
    # <<-- REMOVED 'secrets: inherit' from here -->>
    # <<-- REMOVED 'permissions:' from here -->>

# Permissions for the entire workflow can be defined here, or per job.
# Placing them at the top level is often cleaner if many jobs share the same permissions.
permissions:
  contents: read # Allow reading of repository contents
  id-token: write # Allow writing of OIDC tokens for Azure login (crucial for azure/login)
  actions: write # Needed for calling other reusable workflows (like build-orchestrator, deploy.acr)

jobs:
  evaluate_ci_cd_rules:
    name: Evaluate Branch Rules
    runs-on: ubuntu-latest
    outputs:
      should_run_build: ${{ steps.get_rules.outputs.should_run_build }}
      should_run_deploy: ${{ steps.get_rules.outputs.should_run_deploy }}
      target_environment: ${{ steps.get_rules.outputs.target_environment }}
    steps:
      - name: Call Rules Workflow
        uses: ./.github/workflows/rules.yml
        id: get_rules


  orchestrate_build:
    name: Orchestrate Build Stage
    needs: evaluate_ci_cd_rules
    if: needs.evaluate_ci_cd_rules.outputs.should_run_build == 'true'
    runs-on: ubuntu-latest
    outputs:
      full_image_tag: ${{ steps.call_build_orchestrator.outputs.full_image_tag }}
      aks_namespace: ${{ steps.call_build_orchestrator.outputs.aks_namespace }}
    # Permissions defined at job level override workflow-level permissions if specified.
    # No need to repeat if workflow-level permissions are sufficient.
    # permissions:
    #   contents: read
    #   id-token: write
    steps:
      - name: Call Reusable Build Orchestrator Workflow
        id: call_build_orchestrator
        uses: ./.github/workflows/build-orchestrator.yml
        with:
          target_environment: ${{ needs.evaluate_ci_cd_rules.outputs.target_environment }}
          repo_name: ${{ github.event.repository.name }}
          sha: ${{ github.sha }}
        secrets:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


  deploy_np:
    name: Deploy to Non-Production (Dev)
    needs: [evaluate_ci_cd_rules, orchestrate_build]
    if: |
      needs.evaluate_ci_cd_rules.outputs.should_run_deploy == 'true' &&
      needs.evaluate_ci_cd_rules.outputs.target_environment == 'dev'
    runs-on: ubuntu-latest
    # No need to repeat permissions if workflow-level are sufficient
    # permissions:
    #   contents: read
    #   id-token: write
    steps:
      - name: Call Reusable Deploy ACR Workflow (Non-Production)
        uses: ./.github/workflows/deploy.acr.yml
        with:
          target_env_name: dev
          image_full_tag: ${{ needs.orchestrate_build.outputs.full_image_tag }}
          resource_group: ${{ vars.RESOURCE_GROUP }}
          cluster_name: ${{ vars.CLUSTER_NAME }}
          namespace: ${{ needs.orchestrate_build.outputs.aks_namespace }}
        secrets:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  deploy_prod:
    name: Deploy to Production
    needs: [evaluate_ci_cd_rules, orchestrate_build]
    if: |
      needs.evaluate_ci_cd_rules.outputs.should_run_deploy == 'true' &&
      needs.evaluate_ci_cd_rules.outputs.target_environment == 'production'
    runs-on: ubuntu-latest
    # No need to repeat permissions if workflow-level are sufficient
    # permissions:
    #   contents: read
    #   id-token: write
    steps:
      - name: Call Reusable Deploy ACR Workflow (Production)
        uses: ./.github/workflows/deploy.acr.yml
        with:
          target_env_name: production
          image_full_tag: ${{ needs.orchestrate_build.outputs.full_image_tag }}
          resource_group: ${{ vars.RESOURCE_GROUP }}
          cluster_name: ${{ vars.CLUSTER_NAME }}
          namespace: ${{ needs.orchestrate_build.outputs.aks_namespace }}
        secrets:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}